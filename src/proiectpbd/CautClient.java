package proiectpbd;

import java.awt.Color;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.Date;
import javax.swing.JOptionPane;
import net.proteanit.sql.DbUtils;

public class CautClient extends javax.swing.JFrame {

	FerPrinc cautcli = new FerPrinc();
	Connection conn = null;
	PreparedStatement pst = null;
	ResultSet rs = null;
	Color c = new Color(110, 170, 40);

	/** Creates new form CautClient */
	public CautClient() {
		initComponents();
		setTitle("Cautare Client");
		conn = cautcli.javaconnection();
		jTextField1.setVisible(false);
		jTextField2.setVisible(false);
		jDateChooser1.setVisible(false);
		getContentPane().setBackground(c);
		checkBox1Selected();
		checkBox2Selected();
		checkBox3Selected();
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed" desc="Generated
	// Code">//GEN-BEGIN:initComponents
	private void initComponents() {

		jLabel1 = new javax.swing.JLabel();
		jCheckBox1 = new javax.swing.JCheckBox();
		jCheckBox2 = new javax.swing.JCheckBox();
		jCheckBox3 = new javax.swing.JCheckBox();
		jButton1 = new javax.swing.JButton();
		jScrollPane1 = new javax.swing.JScrollPane();
		jTable1 = new javax.swing.JTable();
		jTextField1 = new javax.swing.JTextField();
		jTextField2 = new javax.swing.JTextField();
		jDateChooser1 = new com.toedter.calendar.JDateChooser();

		setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
		setResizable(false);

		jLabel1.setFont(new java.awt.Font("Comic Sans MS", 3, 14));
		jLabel1.setForeground(new java.awt.Color(255, 255, 255));
		jLabel1.setText("Criteriul de cautare : ");

		jCheckBox1.setForeground(new java.awt.Color(255, 255, 255));
		jCheckBox1.setBackground(c);
		jCheckBox1.setText("Nume client");

		jCheckBox2.setForeground(new java.awt.Color(255, 255, 255));
		jCheckBox2.setBackground(c);
		jCheckBox2.setText("Masina cumparata");

		jCheckBox3.setForeground(new java.awt.Color(255, 255, 255));
		jCheckBox3.setBackground(c);
		jCheckBox3.setText("Data cumparare");

		jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/proiectpbd/home-feature-search-icon.png"))); // NOI18N
		jButton1.setText("Cautare");
		jButton1.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jButton1ActionPerformed(evt);
			}
		});

		jTable1.setModel(
				new javax.swing.table.DefaultTableModel(
						new Object[][] { { null, null, null, null }, { null, null, null, null },
								{ null, null, null, null }, { null, null, null, null } },
						new String[] { "Title 1", "Title 2", "Title 3", "Title 4" }));
		jScrollPane1.setViewportView(jTable1);

		jDateChooser1.setDateFormatString("d-MM-yyyy");

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
		getContentPane().setLayout(layout);
		layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(
				javax.swing.GroupLayout.Alignment.TRAILING,
				layout.createSequentialGroup().addGap(20, 20, 20).addGroup(layout
						.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
						.addGroup(layout.createSequentialGroup().addGap(35, 35, 35).addComponent(jLabel1))
						.addGroup(layout.createSequentialGroup()
								.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
										.addComponent(jCheckBox2).addComponent(jCheckBox3).addComponent(jCheckBox1))
								.addGap(18, 18, 18)
								.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
										.addComponent(jTextField1, javax.swing.GroupLayout.DEFAULT_SIZE, 109,
												Short.MAX_VALUE)
										.addComponent(jTextField2, javax.swing.GroupLayout.Alignment.TRAILING,
												javax.swing.GroupLayout.DEFAULT_SIZE, 109, Short.MAX_VALUE)
										.addComponent(jDateChooser1, javax.swing.GroupLayout.Alignment.TRAILING,
												javax.swing.GroupLayout.PREFERRED_SIZE, 122,
												javax.swing.GroupLayout.PREFERRED_SIZE)))
						.addGroup(layout.createSequentialGroup().addGap(80, 80, 80).addComponent(jButton1)))
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE)
						.addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 452,
								javax.swing.GroupLayout.PREFERRED_SIZE)
						.addContainerGap()));
		layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout
				.createSequentialGroup()
				.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(layout.createSequentialGroup().addGap(29, 29, 29).addComponent(jScrollPane1,
								javax.swing.GroupLayout.PREFERRED_SIZE, 334, javax.swing.GroupLayout.PREFERRED_SIZE))
						.addGroup(layout.createSequentialGroup().addGap(57, 57, 57).addComponent(jLabel1)
								.addGap(37, 37, 37)
								.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
										.addComponent(jCheckBox1).addComponent(jTextField1,
												javax.swing.GroupLayout.PREFERRED_SIZE,
												javax.swing.GroupLayout.DEFAULT_SIZE,
												javax.swing.GroupLayout.PREFERRED_SIZE))
								.addGap(26, 26, 26)
								.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
										.addComponent(jCheckBox2).addComponent(jTextField2,
												javax.swing.GroupLayout.PREFERRED_SIZE,
												javax.swing.GroupLayout.DEFAULT_SIZE,
												javax.swing.GroupLayout.PREFERRED_SIZE))
								.addGap(26, 26, 26)
								.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
										.addComponent(jCheckBox3).addComponent(jDateChooser1,
												javax.swing.GroupLayout.PREFERRED_SIZE,
												javax.swing.GroupLayout.DEFAULT_SIZE,
												javax.swing.GroupLayout.PREFERRED_SIZE))
								.addGap(45, 45, 45).addComponent(jButton1)))
				.addContainerGap(29, Short.MAX_VALUE)));

		java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
		setBounds((screenSize.width - 758) / 2, (screenSize.height - 430) / 2, 758, 430);
	}// </editor-fold>//GEN-END:initComponents

	private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jButton1ActionPerformed
		if (jCheckBox1.isSelected() & jCheckBox2.isSelected() & jCheckBox3.isSelected()) {
			try {
				String sql = "select distinct IdClient ID_Client,nume Nume,pren Prenume,adr Adresa,den Piesa,cant Cantitate,datav Data_cumparare from piese,factura,vanzare,client "
						+ "where codp=Piese_codp and codf=Vanzare_codf and codc=Client_codc and "
						+ "nume=? and den=? and datav=str_to_date(?, '%d-%m-%Y')";
				pst = conn.prepareStatement(sql);
				Date data = jDateChooser1.getDate();
				String dataString = String.format("%1$td-%1$tm-%1$tY", data);
				pst.setString(1, jTextField1.getText());
				pst.setString(2, jTextField2.getText());
				pst.setString(3, dataString);
				rs = pst.executeQuery();
				jTable1.setModel(DbUtils.resultSetToTableModel(rs));
			} catch (Exception e) {
				JOptionPane.showMessageDialog(null, e);
			}
		} else if (jCheckBox1.isSelected() & jCheckBox2.isSelected()) {
			try {
				String sql = "select distinct codc Cod_client,nume Nume,pren Prenume,adr Adresa,den Piesa,cant Cantitate,datav Data_cumparare from piese,factura,vanzare,client "
						+ "where codp=Piese_codp and codf=Vanzare_codf and codc=Client_codc and " + "nume=? and den=?";
				pst = conn.prepareStatement(sql);
				pst.setString(1, jTextField1.getText());
				pst.setString(2, jTextField2.getText());
				rs = pst.executeQuery();
				jTable1.setModel(DbUtils.resultSetToTableModel(rs));
			} catch (Exception e) {
				JOptionPane.showMessageDialog(null, e);
			}
		} else if (jCheckBox1.isSelected() & jCheckBox3.isSelected()) {
			try {
				String sql = "select distinct codc Cod_client,nume Nume,pren Prenume,adr Adresa,den Piesa,cant Cantitate,datav Data_cumparare from piese,factura,vanzare,client "
						+ "where codp=Piese_codp and codf=Vanzare_codf and codc=Client_codc and "
						+ "nume=? and datav=str_to_date(?, '%d-%m-%Y')";
				pst = conn.prepareStatement(sql);
				Date data = jDateChooser1.getDate();
				String dataString = String.format("%1$td-%1$tm-%1$tY", data);
				pst.setString(1, jTextField1.getText());
				pst.setString(2, dataString);
				rs = pst.executeQuery();
				jTable1.setModel(DbUtils.resultSetToTableModel(rs));
			} catch (Exception e) {
				JOptionPane.showMessageDialog(null, e);
			}
		} else if (jCheckBox2.isSelected() & jCheckBox3.isSelected()) {
			try {
				String sql = "select distinct codc Cod_client,nume Nume,pren Prenume,adr Adresa,den Piesa,cant Cantitate,datav Data_cumparare from piese,factura,vanzare,client "
						+ "where codp=Piese_codp and codf=Vanzare_codf and codc=Client_codc and "
						+ "den=? and datav=str_to_date(?, '%d-%m-%Y')";
				pst = conn.prepareStatement(sql);
				Date data = jDateChooser1.getDate();
				String dataString = String.format("%1$td-%1$tm-%1$tY", data);
				pst.setString(1, jTextField2.getText());
				pst.setString(2, dataString);
				rs = pst.executeQuery();
				jTable1.setModel(DbUtils.resultSetToTableModel(rs));
			} catch (Exception e) {
				JOptionPane.showMessageDialog(null, e);
			}
		} else if (jCheckBox1.isSelected()) {
			try {
				String sql = "select distinct codc Cod_client,nume Nume,pren Prenume,adr Adresa,den Piesa,cant Cantitate,datav Data_cumparare from piese,factura,vanzare,client "
						+ "where codp=Piese_codp and codf=Vanzare_codf and codc=Client_codc and " + "nume=?";
				pst = conn.prepareStatement(sql);
				pst.setString(1, jTextField1.getText());
				rs = pst.executeQuery();
				jTable1.setModel(DbUtils.resultSetToTableModel(rs));
			} catch (Exception e) {
				JOptionPane.showMessageDialog(null, e);
			}
		} else if (jCheckBox2.isSelected()) {
			try {
				String sql = "select distinct codc Cod_client,nume Nume,pren Prenume,adr Adresa,den Piesa,cant Cantitate,datav Data_cumparare from piese,factura,vanzare,client "
						+ "where codp=Piese_codp and codf=Vanzare_codf and codc=Client_codc and " + "den=?";
				pst = conn.prepareStatement(sql);
				pst.setString(1, jTextField2.getText());
				rs = pst.executeQuery();
				jTable1.setModel(DbUtils.resultSetToTableModel(rs));
			} catch (Exception e) {
				JOptionPane.showMessageDialog(null, e);
			}
		} else if (jCheckBox3.isSelected()) {
			try {
				String sql = "select distinct codc Cod_client,nume Nume,pren Prenume,adr Adresa,den Piesa,cant Cantitate,datav Data_cumparare from piese,factura,vanzare,client "
						+ "where codp=Piese_codp and codf=Vanzare_codf and codc=Client_codc and "
						+ "datav=str_to_date(?, '%d-%m-%Y')";
				pst = conn.prepareStatement(sql);
				Date data = jDateChooser1.getDate();
				String dataString = String.format("%1$td-%1$tm-%1$tY", data);
				pst.setString(1, dataString);
				rs = pst.executeQuery();
				jTable1.setModel(DbUtils.resultSetToTableModel(rs));
			} catch (Exception e) {
				JOptionPane.showMessageDialog(null, e);
			}
		} else {
			JOptionPane.showMessageDialog(null, "Nu ati selectat criteriul de cautare!");
		}
		// TODO add your handling code here:
	}// GEN-LAST:event_jButton1ActionPerformed

	public void checkBox1Selected() {
		jCheckBox1.addItemListener(new ItemListener() {
			@Override
			public void itemStateChanged(ItemEvent e) {
				if (e.getStateChange() == ItemEvent.SELECTED) {
					jTextField1.setVisible(true);
				} else if (e.getStateChange() == ItemEvent.DESELECTED) {
					jTextField1.setVisible(false);
					jTextField1.setText("");

				}

				validate();
				repaint();
			}
		});
	}

	public void checkBox2Selected() {
		jCheckBox2.addItemListener(new ItemListener() {
			@Override
			public void itemStateChanged(ItemEvent e) {
				if (e.getStateChange() == ItemEvent.SELECTED) {
					jTextField2.setVisible(true);
				} else if (e.getStateChange() == ItemEvent.DESELECTED) {
					jTextField2.setVisible(false);
					jTextField2.setText("");
				}

				validate();
				repaint();
			}
		});
	}

	public void checkBox3Selected() {
		jCheckBox3.addItemListener(new ItemListener() {
			@Override
			public void itemStateChanged(ItemEvent e) {
				if (e.getStateChange() == ItemEvent.SELECTED) {
					jDateChooser1.setVisible(true);
				} else if (e.getStateChange() == ItemEvent.DESELECTED) {
					jDateChooser1.setVisible(false);
					jDateChooser1.setCalendar(null);
				}

				validate();
				repaint();
			}
		});
	}

	/**
	 * @param args
	 *            the command line arguments
	 */
	public static void main(String args[]) {

		/* Create and display the form */
		java.awt.EventQueue.invokeLater(new Runnable() {

			public void run() {
				new CautClient().setVisible(true);
			}
		});
	}

	// Variables declaration - do not modify//GEN-BEGIN:variables
	private javax.swing.JButton jButton1;
	private javax.swing.JCheckBox jCheckBox1;
	private javax.swing.JCheckBox jCheckBox2;
	private javax.swing.JCheckBox jCheckBox3;
	private com.toedter.calendar.JDateChooser jDateChooser1;
	private javax.swing.JLabel jLabel1;
	private javax.swing.JScrollPane jScrollPane1;
	private javax.swing.JTable jTable1;
	private javax.swing.JTextField jTextField1;
	private javax.swing.JTextField jTextField2;
	// End of variables declaration//GEN-END:variables
}
